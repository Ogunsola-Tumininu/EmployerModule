@model EmployerModules.DAL.ScheduleUploadTemp

@{
    ViewBag.Title = "UpdateMember";
}

<div class="welcome">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="content">
                    <h2 class="text-center">Update Member</h2>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="welcome">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="content table-div">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Id)

                            <div class="form-group">
                                @Html.LabelFor(model => model.Period, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.Period, new { htmlAttributes = new { @class = "form-control", @readonly="readonly" } })
                                    @Html.ValidationMessageFor(model => model.Period, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Pin, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.Pin, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Pin, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.OtherName, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.OtherName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.OtherName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeContribution, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.EmployeeContribution, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeContribution, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployerContribution, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.EmployerContribution, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployerContribution, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.VoluntaryContribution, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.VoluntaryContribution, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.VoluntaryContribution, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TotalContribution, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.TotalContribution, new { htmlAttributes = new { @class = "form-control", @readonly="readonly" } })
                                    @Html.ValidationMessageFor(model => model.TotalContribution, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                <div class="col-md-offset-4 col-md-10">
                                    <input type="submit" value="Save" class="btn btn-success" />
                                </div>
                            </div>
                        </div>
                    }

                    <div class="col-md-12">
                        <a href="@Url.Action("EmployeeList", "Employer", new { pfa="25"})">Back to List</a>    
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    $("#EmployeeContribution").blur(function () {
        let EmployeeContr = Number($("#EmployeeContribution").val());
        let EmployerContr= Number($("#EmployerContribution").val());
        let VoluntaryContr = Number($("#VoluntaryContribution").val());
        console.log(EmployeeContr + EmployerContr + VoluntaryContr)
        $("#TotalContribution").val(EmployeeContr + EmployerContr + VoluntaryContr);
    })
    $("#EmployerContribution").blur(function () {
        let EmployeeContr = Number($("#EmployeeContribution").val());
        let EmployerContr = Number($("#EmployerContribution").val());
        let VoluntaryContr = Number($("#VoluntaryContribution").val());
        console.log(EmployeeContr + EmployerContr + VoluntaryContr)
        $("#TotalContribution").val(EmployeeContr + EmployerContr + VoluntaryContr);
    })
    $("#VoluntaryContribution").blur(function () {
        let EmployeeContr = Number($("#EmployeeContribution").val());
        let EmployerContr = Number($("#EmployerContribution").val());
        let VoluntaryContr = Number($("#VoluntaryContribution").val());
        console.log(EmployeeContr + EmployerContr + VoluntaryContr)
        $("#TotalContribution").val(EmployeeContr + EmployerContr + VoluntaryContr);
    })
</script>
}
